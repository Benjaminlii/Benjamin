<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Spring的配置文件，主要配置和业务逻辑有关的相关配置 -->

    <!-- 扫描注解类 -->
    <context:component-scan base-package="com.Benjamin.crud">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 引入db.properties -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 数据源 -->
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>


    <!-- MyBatis整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定MyBatis全局配置文件的位置 -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
        <!-- 数据源 -->
        <property name="dataSource" ref="pooledDataSource"/>
        <!-- MyBatis中mapper文件的位置 -->
        <property name="mapperLocations" value="classpath:com.Benjamin.p2p.mapper/*.xml"/>
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.com.Benjamin.p2p.mapper.MapperScannerConfigurer">
        <!-- 扫描所有的dao接口，加入到ioc容器中 -->
        <property name="basePackage" value="com.Benjamin.crud.dao"/>
    </bean>
    <!-- 配置可以执行批量操作的sqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <!-- 下面这一行设置批量执行 -->
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>



    <!-- 事务控制 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>
    <!-- 基于注解的事务控制 -->
    <tx:annotation-driven/>

    <!-- 基于XML配置的事务控制 -->
    <!-- 事务的增强 -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!-- 配置get为只读事务 -->
            <tx:method name="get*" read-only="true"/>
            <!-- 以所有方法为事务方法 -->
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <!-- 切入点表达式 -->
        <aop:pointcut id="txPointCut" expression="execution(* com.Benjamin.crud.service.*.*(..))"/>
        <!-- createData.MapperTest.testCrud -->
        <!-- 配置事务增强 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

</beans>